<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/batch
http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
 http://www.springframework.org/schema/jdbc 
http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">

	<!-- stored job-meta in memory -->
	<!-- <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"> 
		<property name="transactionManager" ref="transactionManager" /> </bean> -->
	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
	<!-- stored job-meta in database -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseType" value="mysql" />
	</bean>


	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
		<property name="taskExecutor">
			<bean
				class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
		</property>
	</bean>
	<bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="com.mysql.cj.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/springbatch?useSSL=false" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	
	<bean id="jdbcTeamplateObject" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- create job-meta tables automatically -->
	<jdbc:initialize-database
		data-source="dataSource">
		<jdbc:script
			location="classpath:/org/springframework/batch/core/schema-drop-mysql.sql" />
		<jdbc:script
			location="classpath:/org/springframework/batch/core/schema-mysql.sql" />
	</jdbc:initialize-database>
	
	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />
	<bean id="jobRegistryBeanPostProcessor"
		class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry" />
	</bean>
	<batch:job id="loanUpload" job-repository="jobRepository">
		<batch:step id="readData">
			<batch:tasklet>
				<batch:chunk reader="csvFileItemReader"
					writer="writerChunk" processor="itemProcessor" commit-interval="10"></batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>


	<bean id="csvFileItemReader"
		class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">

		<property name="resource"
			value="file:#{jobParameters['file']}" />

		<property name="lineMapper">
			<bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="name,age,subject" />
						<property name="delimiter" value="|" />
					</bean>
				</property>
				<property name="fieldSetMapper">

					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="player" />
					</bean>
				</property>
			</bean>
		</property>

	</bean>
	<bean id="writerChunk" class="com.springsecurity.batch.CustomFileWriter">
	</bean>


	<bean id="player" class="com.springsecurity.domain.Player" scope="prototype" />
	<bean id="itemProcessor" class="com.springsecurity.batch.CustomFileProcessor" />
</beans>



